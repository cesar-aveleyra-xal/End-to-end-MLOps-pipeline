name: BuildSageMakerModel
on:
  push:
    branches: [ test ]
  pull_request:
    branches: ["main"]
    paths: [pipelines/**]

env:
  AWS_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  COMPANY_NAME: ${{ vars.COMPANY_NAME }}
  SM_MODEL_NAME: reinforcement-learning
  # SM_EXECUTE_PIPELINE: ${{ vars.SM_MAINTENANCE_OPE }}
  SM_EXECUTE_PIPELINE: true

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  environment-definition:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: setup python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade . botocore boto3 awscli
          ls ${{ github.workspace }}

  unit-test-python-sagemaker-pipeline:
    needs: [environment-definition]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        python: ["3.9"]
    steps:
      - uses: actions/checkout@v3
      - name: SETUP PYTHON
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: INSTALL PACKAGES
        run: pip3 install tox
      - name: RUN TOX
        working-directory: pipelines
        run: tox
  
  Ejecucion-pipeline:
    needs: [unit-test-python-sagemaker-pipeline]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      - name: Configure AWS Credentials
        id: aws_creds
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::739275483428:role/GitHubAction-AssumeRoleWithAction  # Change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity
          aws sagemaker list-projects --region us-east-2

      - name: Build SageMaker Pipeline
        run: |
          export SAGEMAKER_PROJECT_ID=$(aws sagemaker describe-project \
            --project-name ${{ vars.COMPANY_NAME }}-${{ vars.PROJECT_NAME }}-${{ vars.ENV }}-${{ env.SM_MODEL_NAME }} \
            --query ProjectId \
            --output text)
          export SAGEMAKER_PROJECT_ARN=$(aws sagemaker describe-project \
            --project-name ${{ vars.COMPANY_NAME }}-${{ vars.PROJECT_NAME }}-${{ vars.ENV }}-${{ env.SM_MODEL_NAME }} \
            --query ProjectArn \
            --output text)
          export ARTIFACT_BUCKET=sagemaker-${{ env.SM_MODEL_NAME }}-${{ env.AWS_REGION }}
          export SM_MODEL_NAME_ID="${{ env.SM_MODEL_NAME }}"
          export SAGEMAKER_PIPELINE_ROLE_ARN=arn:aws:iam::${{ steps.aws_creds.outputs.aws-account-id }}:role/AmazonSageMakerServiceCatalogProductsUseRole
          run-pipeline --module-name pipelines.abalone.pipeline \
            --execute-pipeline ${{ env.SM_EXECUTE_PIPELINE }} \
            --role-arn ${SAGEMAKER_PIPELINE_ROLE_ARN} \
            --tags "[{\"Key\":\"sagemaker:project-name\", \"Value\":\"${SM_MODEL_NAME}\"}, {\"Key\":\"sagemaker:project-id\", \"Value\":\"${SAGEMAKER_PROJECT_ID}\"}]" \
            --kwargs "{\"region\":\"${AWS_REGION}\",\"sagemaker_project_arn\":\"${SAGEMAKER_PROJECT_ARN}\",\"role\":\"${SAGEMAKER_PIPELINE_ROLE_ARN}\",\"default_bucket\":\"${ARTIFACT_BUCKET}\",\"pipeline_name\":\"${SM_MODEL_NAME_ID}\",\"model_package_group_name\":\"${SM_MODEL_NAME_ID}\",\"base_job_prefix\":\"${SM_MODEL_NAME_ID}\"}"

      - name: GET LAST MODEL PACKAGES
        id: model-packages
        working-directory: cloudformation/models_params/${{ vars.ENV }}
        run: |
          LAST_MODEL_PACKAGE=$(aws sagemaker list-model-packages --model-approval-status Approved --model-package-group-name ${{ vars.COMPANY_NAME }}-${{ vars.PROJECT_NAME }}-${{ vars.ENV }}-${{ env.SM_MODEL_NAME }} --sort-by CreationTime --query "ModelPackageSummaryList[0].[ModelPackageArn]" --output text)
          LAST_MODEL_VERSION_APPROVED=$(echo $LAST_MODEL_PACKAGE | rev | cut -d'/' -f1 | rev)
          echo $LAST_MODEL_PACKAGE
          jq --arg SAGEMAKER_PROJECT_NAME "$SM_MODEL_NAME" --arg LAST_MODEL_PACKAGE "$LAST_MODEL_PACKAGE" --arg LAST_MODEL_VERSION_APPROVED "$LAST_MODEL_VERSION_APPROVED" '. |= map(if .ParameterKey == "SageMakerProjectName" then .ParameterValue = $SAGEMAKER_PROJECT_NAME elif .ParameterKey == "LastModelVersion" then .ParameterValue = $LAST_MODEL_PACKAGE elif .ParameterKey == "LastModelVersionApproved" then .ParameterValue = $LAST_MODEL_VERSION_APPROVED else . end)' params_$SM_MODEL_NAME.json > updated_params_dummy.json
          mv updated_params_dummy.json params_model.json
          cat params_model.json
      - name: CREATE SAGEMAKER MODEL STACK IN CLOUDFORMATION
        id: CF
        # working-directory: cloudformation
        uses: aws-actions/aws-cloudformation-github-deploy@master
        with:
          name:  ${{ vars.COMPANY_NAME }}-${{ vars.PROJECT_NAME }}-${{ vars.ENV }}-${{ env.SM_MODEL_NAME }}
          template: cloudformation/models_templates/${{ vars.COMPANY_NAME }}-${{ vars.PROJECT_NAME }}-${{env.SM_MODEL_NAME }}.yml
          no-fail-on-empty-changeset: "1"
          capabilities: CAPABILITY_IAM, CAPABILITY_NAMED_IAM
          parameter-overrides: file://${{ github.workspace }}/cloudformation/models_params/${{ vars.ENV }}/params_model.json